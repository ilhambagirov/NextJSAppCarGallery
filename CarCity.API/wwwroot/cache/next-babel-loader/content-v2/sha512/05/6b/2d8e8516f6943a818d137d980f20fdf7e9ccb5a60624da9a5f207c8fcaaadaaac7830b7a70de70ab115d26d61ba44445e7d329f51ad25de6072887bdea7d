{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ilham.baghirov\\\\Desktop\\\\nextCarGallery\\\\NextJSAppCarGallery\\\\NextJSAppCarGallery\\\\pages\\\\cars\\\\updateCar\\\\[updateCarId].js\",\n    _s = $RefreshSig$();\n\nimport agent from \"../../../api/agent\";\nimport NewCarForm from \"../../../components/meetups/NewCarForm\";\nimport { useRouter } from \"next/router\";\n\nfunction CarUpdate(props) {\n  _s();\n\n  var router = useRouter();\n\n  var createCarHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(newCar) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              router.query.updateCarId;\n              _context.next = 3;\n              return agent.Cars.edit(id, newCar);\n\n            case 3:\n              response = _context.sent;\n              console.log(response);\n              router.replace(\"/cars\");\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createCarHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(NewCarForm, {\n    onAddMeetup: createCarHandler,\n    carData: props.carData,\n    carTypeData: props.carTypeData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CarUpdate, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = CarUpdate;\nexport var __N_SSP = true;\nexport default CarUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarUpdate\");","map":{"version":3,"sources":["C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/pages/cars/updateCar/[updateCarId].js"],"names":["agent","NewCarForm","useRouter","CarUpdate","props","router","createCarHandler","newCar","query","updateCarId","Cars","edit","id","response","console","log","replace","carData","carTypeData"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;;AACA,MAAMI,gBAAgB;AAAA,wEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBF,cAAAA,MAAM,CAACG,KAAP,CAAaC,WAAb;AADuB;AAAA,qBAEFT,KAAK,CAACU,IAAN,CAAWC,IAAX,CAAgBC,EAAhB,EAAoBL,MAApB,CAFE;;AAAA;AAEnBM,cAAAA,QAFmB;AAGvBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAR,cAAAA,MAAM,CAACW,OAAP,CAAe,OAAf;;AAJuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBV,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAMA,sBACE,QAAC,UAAD;AACE,IAAA,WAAW,EAAEA,gBADf;AAEE,IAAA,OAAO,EAAEF,KAAK,CAACa,OAFjB;AAGE,IAAA,WAAW,EAAEb,KAAK,CAACc;AAHrB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAfQf,S;UACQD,S;;;KADRC,S;;AAmCT,eAAeA,SAAf","sourcesContent":["import agent from \"../../../api/agent\";\r\nimport NewCarForm from \"../../../components/meetups/NewCarForm\";\r\nimport { useRouter } from \"next/router\";\r\nfunction CarUpdate(props) {\r\n  const router = useRouter();\r\n  const createCarHandler = async (newCar) => {\r\n    router.query.updateCarId; \r\n    var response = await agent.Cars.edit(id, newCar);\r\n    console.log(response);\r\n    router.replace(\"/cars\");\r\n  };\r\n  return (\r\n    <NewCarForm\r\n      onAddMeetup={createCarHandler}\r\n      carData={props.carData}\r\n      carTypeData={props.carTypeData}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const carId = context.params.updateCarId;\r\n  const response = await agent.Cars.get(carId);\r\n  const responseCarType = await agent.CarTypes.getAll();\r\n  console.log(\"salam\");\r\n  if (response === \"\") {\r\n    return {\r\n      notFound: true,\r\n    };\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      carData: response,\r\n      carTypeData: responseCarType,\r\n    },\r\n  };\r\n}\r\nexport default CarUpdate;\r\n"]},"metadata":{},"sourceType":"module"}