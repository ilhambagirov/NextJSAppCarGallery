{"ast":null,"code":"import _slicedToArray from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { makeAutoObservable } from \"mobx\";\n\nvar CarStore = /*#__PURE__*/function () {\n  function CarStore() {\n    var _this = this;\n\n    _classCallCheck(this, CarStore);\n\n    _defineProperty(this, \"carRegistry\", new Map());\n\n    _defineProperty(this, \"loading\", false);\n\n    _defineProperty(this, \"loadCars\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cars) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  console.log(cars);\n                  cars.forEach(function (a) {\n                    _this.setActivity(a);\n                  });\n                } catch (error) {\n                  console.log(error);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(this, \"getPost\", function (id) {\n      return _this.carRegistry.get(id);\n    });\n\n    _defineProperty(this, \"setActivity\", function (a) {\n      _this.carRegistry.set(a.id, a);\n    });\n\n    makeAutoObservable(this);\n  }\n\n  _createClass(CarStore, [{\n    key: \"groupedCars\",\n    get: function get() {\n      var result = Array.from(this.carRegistry, function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            id = _ref3[0],\n            value = _ref3[1];\n\n        return {\n          id: id,\n          value: value\n        };\n      }).sort(function (a, b) {\n        var dateA = new Date(a.value.createdDate).getTime();\n        var dateB = new Date(b.value.createdDate).getTime();\n        return dateA < dateB ? 1 : -1;\n      });\n      return result;\n    } // deletePost = async (id: number) => {\n    //     try {\n    //         const post = await agent.Posts.delete(id);\n    //         runInAction(() => {\n    //             this.postRegistry.delete(id)\n    //         })\n    //         var profile = dark.profileStore.profile as User\n    //         profile.posts.length--\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // }\n\n  }]);\n\n  return CarStore;\n}();\n\nexport { CarStore as default };","map":{"version":3,"sources":["C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/stores/carStore.ts"],"names":["makeAutoObservable","CarStore","Map","cars","console","log","forEach","a","setActivity","error","id","carRegistry","get","set","result","Array","from","value","sort","b","dateA","Date","createdDate","getTime","dateB"],"mappings":";;;;;;AAAA,SAASA,kBAAT,QAAgD,MAAhD;;IAIqBC,Q;AAGjB,sBAAc;AAAA;;AAAA;;AAAA,yCAFA,IAAIC,GAAJ,EAEA;;AAAA,qCADJ,KACI;;AAAA;AAAA,0EAIH,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACP,oBAAI;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAA,kBAAAA,IAAI,CAACG,OAAL,CAAa,UAAAC,CAAC,EAAI;AACd,oBAAA,KAAI,CAACC,WAAL,CAAiBD,CAAjB;AACH,mBAFD;AAGH,iBALD,CAKE,OAAOE,KAAP,EAAc;AACZL,kBAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;;AARM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJG;;AAAA;AAAA;AAAA;AAAA;;AAAA,qCAoCI,UAACC,EAAD,EAAgB;AAC9B,aAAO,KAAI,CAACC,WAAL,CAAiBC,GAAjB,CAAqBF,EAArB,CAAP;AACH,KAtCa;;AAAA,yCAwCA,UAACH,CAAD,EAAY;AACtB,MAAA,KAAI,CAACI,WAAL,CAAiBE,GAAjB,CAAqBN,CAAC,CAACG,EAAvB,EAA2BH,CAA3B;AACH,KA1Ca;;AACVP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;;;wBAaiB;AACd,UAAIc,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAKL,WAAhB,EAA6B;AAAA;AAAA,YAAED,EAAF;AAAA,YAAMO,KAAN;;AAAA,eAAkB;AAAEP,UAAAA,EAAE,EAAFA,EAAF;AAAMO,UAAAA,KAAK,EAALA;AAAN,SAAlB;AAAA,OAA7B,EACRC,IADQ,CACH,UAAUX,CAAV,EAAaY,CAAb,EAAgB;AAClB,YAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASd,CAAC,CAACU,KAAF,CAAQK,WAAjB,EAA8BC,OAA9B,EAAZ;AACA,YAAIC,KAAK,GAAG,IAAIH,IAAJ,CAASF,CAAC,CAACF,KAAF,CAAQK,WAAjB,EAA8BC,OAA9B,EAAZ;AACA,eAAOH,KAAK,GAAGI,KAAR,GAAgB,CAAhB,GAAoB,CAAC,CAA5B;AACH,OALQ,CAAb;AAMA,aAAOV,MAAP;AACH,K,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;SAtCiBb,Q","sourcesContent":["import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Car, CarFormValues } from \"../models/car\";\r\n\r\nexport default class CarStore {\r\n    carRegistry = new Map<number, Car>();\r\n    loading = false\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    loadCars = async (cars: Car[]) => {\r\n        try {\r\n            console.log(cars);\r\n            cars.forEach(a => {\r\n                this.setActivity(a)\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    get groupedCars() {\r\n        var result = Array.from(this.carRegistry, ([id, value]) => ({ id, value }))\r\n            .sort(function (a, b) {\r\n                var dateA = new Date(a.value.createdDate).getTime();\r\n                var dateB = new Date(b.value.createdDate).getTime();\r\n                return dateA < dateB ? 1 : -1\r\n            });\r\n        return result\r\n    }\r\n    // deletePost = async (id: number) => {\r\n    //     try {\r\n    //         const post = await agent.Posts.delete(id);\r\n    //         runInAction(() => {\r\n    //             this.postRegistry.delete(id)\r\n    //         })\r\n    //         var profile = dark.profileStore.profile as User\r\n    //         profile.posts.length--\r\n    //     } catch (error) {\r\n    //         console.log(error)\r\n    //     }\r\n    // }\r\n    private getPost = (id: number) => {\r\n        return this.carRegistry.get(id)\r\n    }\r\n\r\n    setActivity = (a: Car) => {\r\n        this.carRegistry.set(a.id, a);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}