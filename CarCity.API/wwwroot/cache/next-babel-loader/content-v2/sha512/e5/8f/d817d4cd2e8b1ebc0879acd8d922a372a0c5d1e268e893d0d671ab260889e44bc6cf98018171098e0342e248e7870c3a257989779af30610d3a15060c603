{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert\";\n\nconst sleep = delay => {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.interceptors.response.use(async response => {\n  if (false) await sleep(200);\n  return response;\n}, error => {\n  const {\n    data,\n    status\n  } = error.response;\n\n  switch (status) {\n    case 400:\n      console.log(data);\n      swal(data.errors[Object.keys(data.errors)[0]][0], {\n        icon: \"error\"\n      }); // dark.userStore.errorData = data.errors[Object.keys(data.errors)[0]][0]\n\n      break;\n\n    case 401:\n      swal(\"Your are not logged in!\", {\n        icon: \"error\"\n      });\n      break;\n\n    case 404:\n      // dark.commonStore.setServerError(data)\n      swal(\"Error ala\", {\n        icon: \"error\"\n      });\n      break;\n\n    case 500:\n      // dark.commonStore.setServerError(data)\n      break;\n\n    default:\n      break;\n  }\n\n  return Promise.reject(error);\n});\n\nconst responseBody = response => response.data;\n\nconst request = {\n  get: url => axios.get(url).then(responseBody),\n  post: (url, body) => axios.post(url, body).then(responseBody),\n  put: (id, body) => axios.put(id, body).then(responseBody),\n  delete: url => axios.delete(url).then(responseBody)\n};\nconst Cars = {\n  getAll: () => request.get(`/Car/GetAllCars`),\n  get: id => request.get(`/Car/GetCar/${id}`),\n  create: post => request.post(`/Car/createCar`, post) // delete: (id: number) => request.delete<void>(`/home/posts/${id}`),\n\n};\nconst agent = {\n  Cars\n};\nexport default agent;","map":null,"metadata":{},"sourceType":"module"}