{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ilham.baghirov\\\\Desktop\\\\nextCarGallery\\\\NextJSAppCarGallery\\\\NextJSAppCarGallery\\\\pages\\\\cars\\\\index.jsx\";\nimport CarList from \"../../components/meetups/CarList\";\nimport { useDarkMode } from \"../../stores/store\";\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nexport var __N_SSP = true;\nexport default _c2 = observer(_c = function Cars(props) {\n  // const { carStore } = useDarkMode();\n  // const { loadCars, groupedCars } = carStore;\n  // useEffect(() => {\n  //   loadCars(props.cars);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(CarList, {\n    cars: props.cars\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$observer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/pages/cars/index.jsx"],"names":["CarList","useDarkMode","observer","useEffect","Cars","props","cars"],"mappings":";;AACA,OAAOA,OAAP,MAAoB,kCAApB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,qBAAeD,QAAQ,MAAC,SAASE,IAAT,CAAcC,KAAd,EAAqB;AAC3C;AACA;AAEA;AACA;AACA;AAEA,sBAAO,QAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,KAAK,CAACC;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CATsB,CAAvB","sourcesContent":["import agent from \"../../api/agent\";\r\nimport CarList from \"../../components/meetups/CarList\";\r\nimport { useDarkMode } from \"../../stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default observer(function Cars(props) {\r\n  // const { carStore } = useDarkMode();\r\n  // const { loadCars, groupedCars } = carStore;\r\n\r\n  // useEffect(() => {\r\n  //   loadCars(props.cars);\r\n  // }, []);\r\n\r\n  return <CarList cars={props.cars} />;\r\n});\r\n\r\nexport async function getServerSideProps() {\r\n  const res = await agent.Cars.getAll();\r\n  console.log(res);\r\n  return {\r\n    props: {\r\n      cars: res,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}