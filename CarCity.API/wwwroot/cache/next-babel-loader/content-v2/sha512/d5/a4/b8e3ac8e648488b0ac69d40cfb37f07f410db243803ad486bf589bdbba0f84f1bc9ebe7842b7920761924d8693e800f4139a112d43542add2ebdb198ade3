{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\nvar sleep = function sleep(delay) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = \"http://localhost:6680/api\";\nconsole.log(process.env.REACT_APP_API_URL);\naxios.interceptors.response.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!true) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return sleep(200);\n\n          case 3:\n            return _context.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  var _ref2 = error.response,\n      data = _ref2.data,\n      status = _ref2.status;\n\n  switch (status) {\n    case 400:\n      console.log(data);\n      swal(data.errors[Object.keys(data.errors)[0]][0], {\n        icon: \"error\"\n      }); // dark.userStore.errorData = data.errors[Object.keys(data.errors)[0]][0]\n\n      break;\n\n    case 401:\n      swal(\"Your are not logged in!\", {\n        icon: \"error\"\n      });\n      break;\n\n    case 404:\n      // dark.commonStore.setServerError(data)\n      swal(\"Error ala\", {\n        icon: \"error\"\n      });\n      break;\n\n    case 500:\n      // dark.commonStore.setServerError(data)\n      break;\n\n    default:\n      break;\n  }\n\n  return Promise.reject(error);\n});\n\nvar responseBody = function responseBody(response) {\n  return response.data;\n};\n\nvar request = {\n  get: function get(url) {\n    return axios.get(url).then(responseBody);\n  },\n  post: function post(url, body) {\n    return axios.post(url, body).then(responseBody);\n  },\n  put: function put(id, body) {\n    return axios.put(id, body).then(responseBody);\n  },\n  \"delete\": function _delete(url) {\n    return axios[\"delete\"](url).then(responseBody);\n  }\n};\nvar Cars = {\n  getAll: function getAll() {\n    return request.get(\"/Car/GetAllCars\");\n  },\n  get: function get(id) {\n    return request.get(\"/Car/GetCar/\".concat(id));\n  },\n  create: function create(post) {\n    return request.post(\"/Car/createCar\", post);\n  } // delete: (id: number) => request.delete<void>(`/home/posts/${id}`),\n\n};\nvar agent = {\n  Cars: Cars\n};\nexport default agent;","map":{"version":3,"sources":["C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/api/agent.ts"],"names":["axios","swal","sleep","delay","Promise","resolve","setTimeout","defaults","baseURL","console","log","process","env","REACT_APP_API_URL","interceptors","response","use","error","data","status","errors","Object","keys","icon","reject","responseBody","request","get","url","then","post","body","put","id","Cars","getAll","create","agent"],"mappings":"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","sourcesContent":["import axios, { Axios, AxiosError, AxiosResponse } from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Car, CarFormValues } from \"../models/car\";\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\naxios.defaults.baseURL = \"http://localhost:6680/api\"\r\nconsole.log(process.env.REACT_APP_API_URL)\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(200);\r\n    return response;\r\n},\r\n    (error: AxiosError) => {\r\n        const { data, status } = error.response!\r\n        switch (status) {\r\n            case 400:\r\n                console.log(data)\r\n                swal(data.errors[Object.keys(data.errors)[0]][0], {\r\n                    icon: \"error\",\r\n                });\r\n                // dark.userStore.errorData = data.errors[Object.keys(data.errors)[0]][0]\r\n                break;\r\n            case 401:\r\n                swal(\"Your are not logged in!\", {\r\n                    icon: \"error\",\r\n                });\r\n                break;\r\n            case 404:\r\n                // dark.commonStore.setServerError(data)\r\n                swal(\"Error ala\", {\r\n                    icon: \"error\",\r\n                });\r\n                break;\r\n            case 500:\r\n                // dark.commonStore.setServerError(data)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data\r\n\r\n\r\nconst request = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(id: string, body: {}) => axios.put<T>(id, body).then(responseBody),\r\n    delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\nconst Cars = {\r\n    getAll: () => request.get<Car[]>(`/Car/GetAllCars`),\r\n    get: (id: number) => request.get<Car>(`/Car/GetCar/${id}`),\r\n    create: (post: CarFormValues) => request.post<number>(`/Car/createCar`, post),\r\n    // delete: (id: number) => request.delete<void>(`/home/posts/${id}`),\r\n}\r\n\r\nconst agent = {\r\n    Cars,\r\n}\r\nexport default agent"]},"metadata":{},"sourceType":"module"}