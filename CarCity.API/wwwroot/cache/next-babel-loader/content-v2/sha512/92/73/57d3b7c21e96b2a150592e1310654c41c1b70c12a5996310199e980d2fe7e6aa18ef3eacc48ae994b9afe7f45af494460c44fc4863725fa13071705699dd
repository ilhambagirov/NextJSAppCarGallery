{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ilham.baghirov/Desktop/nextCarGallery/NextJSAppCarGallery/NextJSAppCarGallery/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\nvar sleep = function sleep(delay) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = \"http://localhost:6680/api\";\naxios.interceptors.response.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", response);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  var _ref2 = error.response,\n      data = _ref2.data,\n      status = _ref2.status;\n\n  switch (status) {\n    case 400:\n      console.log(data);\n      swal(data.errors[Object.keys(data.errors)[0]][0], {\n        icon: \"error\"\n      }); // dark.userStore.errorData = data.errors[Object.keys(data.errors)[0]][0]\n\n      break;\n\n    case 401:\n      swal(\"Your are not logged in!\", {\n        icon: \"error\"\n      });\n      break;\n\n    case 404:\n      // dark.commonStore.setServerError(data)\n      swal(\"Error ala\", {\n        icon: \"error\"\n      });\n      break;\n\n    case 500:\n      // dark.commonStore.setServerError(data)\n      break;\n\n    default:\n      break;\n  }\n\n  return Promise.reject(error);\n});\n\nvar responseBody = function responseBody(response) {\n  return response.data;\n};\n\nvar request = {\n  get: function get(url) {\n    return axios.get(url).then(responseBody);\n  },\n  post: function post(url, body) {\n    return axios.post(url, body).then(responseBody);\n  },\n  put: function put(id, body) {\n    return axios.put(id, body).then(responseBody);\n  },\n  \"delete\": function _delete(url) {\n    return axios[\"delete\"](url).then(responseBody);\n  }\n};\nvar Cars = {\n  getAll: function getAll() {\n    return request.get(\"/Car/GetAllCars\");\n  },\n  get: function get(id) {\n    return request.get(\"/Car/GetCar/\".concat(id));\n  },\n  create: function create(post) {\n    return request.post(\"/Car/createCar\", post);\n  },\n  edit: function edit(id, post) {\n    return request.put(\"/Car/updateCar/\".concat(id), post);\n  },\n  \"delete\": function _delete(id) {\n    return request[\"delete\"](\"/Car/deleteCar/\".concat(id));\n  }\n};\nvar CarTypes = {\n  getAll: function getAll() {\n    return request.get(\"CarType/GetAllCarTypes\");\n  }\n};\nvar agent = {\n  Cars: Cars,\n  CarTypes: CarTypes\n};\nexport default agent;","map":null,"metadata":{},"sourceType":"module"}